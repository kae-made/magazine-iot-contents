// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 0.1.1
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------

using Kae.Utility.Logging;
using System;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Threading;
using System.Threading.Tasks;

namespace BuildingManagement.Gen.MeasurementInstrumentsDevice
{
    using Kae.IoT.Framework;
    using Microsoft.Azure.Devices.Shared;
    using System.Runtime.Loader;
    using YamlDotNet.RepresentationModel;

    class Program
    {
        static void Main(string[] args)
        {
            var iotApp = new IoTApp(ConsoleLogger.CreateLogger());
                        
            iotApp.UserPreInitializeAsync().Wait();

            iotApp.InitializeAsync("iot-app-config.yaml").Wait();

            iotApp.UserPostInitializeAsync().Wait();

            var cancellationTokenSource = new CancellationTokenSource();
            iotApp.DoWorkAsync(cancellationTokenSource).Wait();

            AssemblyLoadContext.Default.Unloading += (ctx) => cancellationTokenSource.Cancel();
            Console.CancelKeyPress += (sender, cpe) => cancellationTokenSource.Cancel();
            WhenCancelled(cancellationTokenSource.Token).Wait();


            iotApp.UserPreTerminateAsync().Wait();

            iotApp.TerminateAsync().Wait();

            iotApp.UserPostTerminateAsync().Wait();
        }

        public static Task WhenCancelled(CancellationToken cancellationToken)
        {
            var tcs = new TaskCompletionSource<bool>();
            cancellationToken.Register(s => ((TaskCompletionSource<bool>)s).SetResult(true), tcs);
            return tcs.Task;
        }
    }

}

